{"version":3,"sources":["logo.svg","config/config.js","components/Header.js/Header.js","utils/apiHandler.js","components/Login/validation.js","components/Login/Login.js","components/Home/Home.js","components/Hooks/useJobs.js","components/Candiates/Candidate.js","components/Login/Logout.js","components/Job/PostAJob.js","components/admin/Admin.js","components/common/Loader.js","components/Job/SingleJobDetail.js","components/Job/JobCard.js","components/common/PaginationTable.js","components/Job/Jobs.js","components/Login/ForgetPassword.js","components/Login/Reset.js","components/Login/ForgetPasswordForm.js","components/Job/JobValidation.js","components/Job/NewJobForm.js","components/Job/NewJobSuccess.js","components/Job/JobForm.js","components/Login/Signup.js","components/Login/SignupSuccess.js","components/Login/Form.js","components/Login/LoginSuccess2.js","components/Login/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","routes","rootRoute","loginRoute","logoutRoute","registerRoute","getPasswordResetToken","verifyPasswordToken","changePassword","forgetpassword","jobsRoute","getOneJobDetails","getAllJobDetails","deleteJob","candidates","getAvailableJobs","getAlreadyAppliedJobs","getPostedJobs","getOneJobCandidates","thanksRoute","admin","Header","props","useState","isActive","setIsActive","history","useHistory","className","onClick","push","localStorage","getItem","removeItem","getApiResponse","url","method","headers","body","a","fetch","json","response","validation","values","errors","fullName","email","test","password","length","confirmPassword","Login","submitForm","result","setResult","setLoading","setValues","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","event","target","name","value","useEffect","Object","keys","performAPICall","Accept","JSON","stringify","console","log","data","login","undefined","token","userRole","setItem","onSubmit","preventDefault","error","LoginValidation","placeholder","type","onChange","x-data","to","Home","src","alt","useJobs","jobs","setJobs","Error","fetchData","Candidate","LogoutView","PostAJob","Admin","renderText","Loader","SingleJobDetail","match","setModalIsOpen","setApplications","isLoaded","setIsLoaded","message","style","background","map","applicant","skills","Math","random","JobCard","job","donationHandler","modalIsOpen","Modal","title","description","location","isOpen","ariaHideApp","onRequestClose","overlay","backgroundColor","content","color","width","margin","id","PaginationTable","renderedData","currentPage","setCurrentPage","itemsPerPage","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","handleClick","pages","i","ceil","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","number","handlePrevButton","handleNextButton","pageIncrementBtn","pageDecrementBtn","disabled","Jobs","loading","e","ForgetPassword","setEmail","reset","ResetValidation","ResetPassword","setPassword","setConfirmPassword","Form","isFormSubmitted","setIsFormSubmitted","jobTitle","NewJobForm","NewJobSuccess","JobForm","Signup","setUserRole","signup","SignupSuccess","LoginSuccess","LoginForm","App","useLocation","useLayoutEffect","window","scrollTo","pathname","path","component","Logout","exact","ForgetPasswordForm","Reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a68f86e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const BASE_URL = `https://jobs-api.squareboat.info/api/v1`\r\n\r\nconst routes = {\r\n  rootRoute: '/myjobs',\r\n  //auth routes\r\n  loginRoute: '/auth/login',\r\n  logoutRoute: '/auth/logout',\r\n  registerRoute: '/auth/register',\r\n  getPasswordResetToken: '/auth/resetpassword?/:email=sharad@gmail.com',\r\n  verifyPasswordToken: '/auth/resetpassword/:token',\r\n  changePassword: '/auth/resetpassword',\r\n  forgetpassword: '/auth/forgetpassword',\r\n  //job router\r\n  jobsRoute: '/jobs?',\r\n  getOneJobDetails: '/jobs/:id',\r\n  getAllJobDetails: '/jobs?',\r\n  deleteJob: '/jobs/:id',\r\n  //candidates\r\n  candidates: '/candidates/jobs',\r\n  getAvailableJobs: '/candidates/jobs?',\r\n  getAlreadyAppliedJobs: '/candidates/jobs/applied',\r\n  //recruiters\r\n  getPostedJobs: '/recruiters/jobs',\r\n  getOneJobCandidates: '/recruiters/jobs/:id',\r\n  thanksRoute: '/thanks',\r\n  admin: '/admin',\r\n}\r\nexport default routes\r\n","import routes from '../../config/config'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst Header = (props) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const toggleHeader = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n  const history = useHistory()\r\n  const root = () => {\r\n    history.push(routes.rootRoute)\r\n  }\r\n  const login = () => {\r\n    history.push(routes.loginRoute)\r\n  }\r\n  const admin = () => {\r\n    history.push(routes.admin)\r\n  }\r\n  const signup = () => {\r\n    history.push(routes.registerRoute)\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    history.push(routes.rootRoute)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='flex justify-between py-5 px-12 lg:px-20  items-center '>\r\n        <div className='logo font-bold text-2xl' onClick={root}>\r\n          <h2>\r\n            My<span className='text-blue-400'>Jobs</span>\r\n          </h2>\r\n        </div>\r\n\r\n        <div\r\n          // className='side__nav hidden md:flex text-center '\r\n          className={\r\n            isActive\r\n              ? 'flex justify-center shadow items-center text-center  Navbar__Link-toggle'\r\n              : 'text-sm w-56 justify-evenly items-center text-center  hidden md:flex'\r\n          }\r\n        >\r\n          <div className='ml-4' onClick={admin}>\r\n            <i className='fas fa-user-cog'></i>\r\n            <p className='text-sm'>Admin</p>\r\n          </div>\r\n\r\n          {localStorage.getItem('token') ? (\r\n            <div className='ml-4' onClick={logout}>\r\n              <i className='fas fa-user-injured'></i>\r\n              <p className='text-sm'>Logout</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className='ml-4' onClick={login}>\r\n                <i className='fas fa-sign-in-alt'></i>\r\n                <p className='text-sm'>Login</p>\r\n              </div>\r\n\r\n              <div className='ml-4' onClick={signup}>\r\n                <i className='fas fa-user-plus'></i>\r\n                <p className='text-sm'>Signup</p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='block md:hidden' onClick={toggleHeader}>\r\n          <i className='fas fa-bars'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","let getApiResponse = async (url, method, headers, body) => {\r\n  let response = await (await fetch(url, { method, headers, body })).json()\r\n  return response\r\n}\r\n\r\nexport { getApiResponse }\r\n","export const ResetValidation = (result, values) => {\r\n  console.log(result)\r\n  console.log(values)\r\n  let errors = {}\r\n  if (values.email === '') {\r\n    errors.error = 'The Field should not be empty.'\r\n  } else if (values.email !== result.email) {\r\n    errors.error = 'The email address is not registered.'\r\n  }\r\n\r\n  return errors\r\n}\r\nexport const LoginValidation = (result, values) => {\r\n  let errors = {}\r\n  if (values.email === '' || !values.password === '') {\r\n    errors.error = 'The Field/s should not be empty.'\r\n  } else if (\r\n    values.email !== result.email ||\r\n    values.password !== result.password\r\n  ) {\r\n    errors.error = 'Incorrect email address or password.'\r\n  }\r\n\r\n  return errors\r\n}\r\nconst validation = (values) => {\r\n  let errors = {}\r\n  if (!values.fullName) {\r\n    errors.fullName = 'The Field is mandatory'\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Email is required'\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'The Field is required'\r\n  } else if (values.password.length < 5) {\r\n    errors.password = 'Password must be more than five character long'\r\n  }\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = 'password is not matching'\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default validation\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getApiResponse } from '../../utils/apiHandler'\r\n// import validation from './validation'\r\nimport { useEffect } from 'react'\r\nimport validation, { LoginValidation } from './validation'\r\n\r\nconst Login = ({ submitForm }) => {\r\n  const [result, setResult] = useState({})\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  // const validation = (result, values) => {\r\n  //   if (\r\n  //     result.data.email !== values.email ||\r\n  //     result.data.password !== values.password\r\n  //   ) {\r\n  //     errors.password = 'The Field is mandatory'\r\n  //   }\r\n  // }\r\n  // console.log(result)\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(LoginValidation(result, values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n      submitForm(true)\r\n    }\r\n  }, [errors])\r\n  const performAPICall = async () => {\r\n    setLoading(true)\r\n    let response\r\n    let errored = false\r\n    try {\r\n      let url = `${BASE_URL}${routes.loginRoute}`\r\n      let method = 'POST'\r\n      let headers = {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      }\r\n      const email = values.email\r\n      const password = values.password\r\n      let body = JSON.stringify({ email, password })\r\n\r\n      response = await getApiResponse(url, method, headers, body)\r\n    } catch (error) {\r\n      errored = true\r\n    }\r\n    console.log(response.data)\r\n    // localStorage.setItem('token', data.email)\r\n    // localStorage.setItem('email', data.name)\r\n    setLoading(false)\r\n    // if (validateResponse(errored, response)) {\r\n    //   return response\r\n    // }\r\n    return response\r\n  }\r\n\r\n  // const validateInput = () => {\r\n  //   if (email === '') {\r\n  //     ;<div className='div'>Username is a required field</div>\r\n  //     errors.username = 'Username is a required field'\r\n  //     return false\r\n  //   }\r\n  //   if (password === '') {\r\n  //     // ;<Message sign='error' message='Password must not be empty' />\r\n  //     // errors.=('Password must not be empty')\r\n  //     return false\r\n  //   } else {\r\n  //     return true\r\n  //   }\r\n  // }\r\n\r\n  const validateResponse = (errored, response) => {\r\n    if (errored === true || response === null) {\r\n      // ;<Message sign='error' message='Error Occured' />\r\n\r\n      // errors.=('Error Occured')\r\n      return false\r\n    } else if (response.success === false) {\r\n      // ;<Message sign='error' message={response.message} />\r\n    } else if (errored === false && response.success === true) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const persistLogin = (token, userRole) => {\r\n    localStorage.setItem('token', token)\r\n    localStorage.setItem('userRole', userRole)\r\n  }\r\n\r\n  const login = async () => {\r\n    try {\r\n      var response = await performAPICall()\r\n      setResult(response)\r\n      if (response !== undefined) {\r\n        console.log(response)\r\n        // if(response.data.email!==values.email)\r\n        persistLogin(response.data.token, response.data.userRole)\r\n        setValues({ email: '', password: '' })\r\n        // ;<Message sign='sucess' message='Successfully Login' />\r\n        // succes.=ss('Successfully Login')\r\n        history.push(routes.jobsRoute)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50 '>\r\n      <form\r\n        className='lg:w-2/5 text-black rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='mx-auto max-w-lg'>\r\n          <h3 className='my-3 text-2xl text-blue-dark font-semibold'>Login</h3>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Email Address\r\n            </span>\r\n            <input\r\n              name='email'\r\n              placeholder='Enter your email'\r\n              type='email'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              onChange={handleChange}\r\n            />\r\n            {/* {errors.email && <p className='error'>{errors.email}</p>} */}\r\n          </div>\r\n          <div className='py-2' x-data='{ show: true }'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Password\r\n            </span>\r\n            <div className='relative'>\r\n              <input\r\n                name='password'\r\n                type='password'\r\n                placeholder='Enter your password'\r\n                className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                onChange={handleChange}\r\n              />\r\n              {errors.error && <p className='error w-48'>{errors.error}</p>}\r\n              <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-between'>\r\n            <label className='block text-gray-500 font-bold my-4'>\r\n              <Link\r\n                to={routes.changePassword}\r\n                className='cursor-pointer tracking-tighter text-blue-lightBlue no-underline border-b-2'\r\n              >\r\n                <span>Reset your password?</span>\r\n              </Link>\r\n            </label>\r\n            <label className='block text-gray-500 font-bold my-4'>\r\n              <Link\r\n                to={routes.forgetpassword}\r\n                className='cursor-pointer tracking-tighter text-blue-lightBlue no-underline border-b-2'\r\n              >\r\n                <span>Forgot your password?</span>\r\n              </Link>\r\n            </label>\r\n          </div>\r\n          <button className='button mx-auto' onClick={login}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {/* Display the footer */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Link } from 'react-router-dom'\r\nimport Header from '../Header.js/Header'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n      <div className='bg-gradient-to-r from-blue-dark to-blue-moderate lg:px-16 h-3/4'>\r\n        {/* <Header /> */}\r\n\r\n        <div className='newBorder mx-12'></div>\r\n        <div className=''>\r\n          <div className='mx-10 md:mx-16 lg:mx-24 my-12 lg:my-20 text-white'>\r\n            <div className='flex items-center md:block logo text-2xl md:text-4xl lg:text-6xl'>\r\n              <h3 className='my-2 mx-2 lg:mx-0'>Welcome to </h3>\r\n              <h2 className=''>\r\n                My<span className='text-blue-lightBlue'>Jobs</span>\r\n              </h2>\r\n            </div>\r\n            <Link to='/jobs'>\r\n              <button className=' py-2 lg:py-3 lg:px-8  font-semibold rounded px-5 bg-blue-lightBlue mt-8 mb-12 lg:mt-12 lg:mb-20 hover:bg-blue-lighter'>\r\n                Get Started\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='img\r\n       hidden lg:flex justify-end -mt-96 mr-32 '\r\n      >\r\n        <img\r\n          src='https://images.unsplash.com/photo-1554774853-719586f82d77?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80'\r\n          className='object-contain rounded-2xl'\r\n          alt=''\r\n        />\r\n      </div>\r\n      <div className='m-5 lg:mx-24 lg:mt-20 mb-12'>\r\n        <h3 className='my-5 text-blue-dark font-semibold text-lg'>Why Us</h3>\r\n        <div className='flex flex-col lg:flex-row '>\r\n          <div className='border px-5 py-5 text-left rounded-lg  bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Get more visibility\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt.\r\n            </p>\r\n          </div>\r\n          <div className='border px-5 py-5 text-left rounded-lg my-5 lg:my-0 lg:mx-5 bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Organize your candidates\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            </p>\r\n          </div>\r\n          <div className='border px-5 py-5 text-left rounded-lg   bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Verify their abilities\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst useJobs = () => {\r\n  const [jobs, setJobs] = useState([])\r\n  const url = 'https://jobs-api.squareboat.info/api/v1/'\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(url)\r\n      if (!response) {\r\n        const message = 'unable to fetch data ...'\r\n        throw new Error(message)\r\n      }\r\n      const data = await response.json()\r\n      setJobs(data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n  return jobs\r\n}\r\n\r\nexport default useJobs\r\n","import useJobs from '../Hooks/useJobs'\r\n\r\nconst Candidate = () => {\r\n  const jobs = useJobs()\r\n  console.log(jobs)\r\n  return <div>here you find a list of Candidate</div>\r\n}\r\n\r\nexport default Candidate\r\n","import React from 'react'\r\n// import \"./Header.css\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport routes from '../../config/config'\r\nconst LogoutView = (props) => {\r\n  const history = useHistory()\r\n  const root = () => {\r\n    history.push(routes.rootRoute)\r\n  }\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    history.push(routes.rootRoute)\r\n  }\r\n  return (\r\n    <div className='flex h-48 flex-col justify-center items-center'>\r\n      {/* <img src='avatar.png' alt='profile' className='profile-image'></img> */}\r\n      <div className='header-info '>\r\n        Hey {localStorage.getItem('username')},\r\n      </div>\r\n      <p className='my-5'>Click the button for logout</p>\r\n      <button className='button mx-auto' onClick={logout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default LogoutView\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst PostAJob = () => {\r\n  return (\r\n    <div>\r\n      {/* <div className='bg-gradient-to-r from-blue-dark to-blue-moderate lg:px-16 h-3/4'> */}\r\n      {/* <Header /> */}\r\n      <Link to='/myjobs' className='ml-20 '>\r\n        <i className='fas fa-house-user mr-2 pt-5'></i>{' '}\r\n        <span className='text-blue-lightBlue'>Home</span>\r\n      </Link>\r\n      <div className=''>\r\n        <div className='mx-10 md:mx-16 lg:mx-24 my-12 lg:my-20 text-white'>\r\n          <div className='flex items-center md:block logo text-2xl'>\r\n            <h2 className=''>Create a New Job</h2>\r\n          </div>\r\n        </div>\r\n        <div className='flex flex-col justify-center items-center pt-20'>\r\n          <i className='fas fa-pen-square text-6xl text-blue-moderate'></i>\r\n          <p className='text-blue-moderate my-5'>\r\n            Your posted jobs will show here!\r\n          </p>\r\n          <Link to='/jobs/new-job/create'>\r\n            <button className='button'>Post a Job</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default PostAJob\r\n","import { Link } from 'react-router-dom'\r\nimport PostAJob from '../Job/PostAJob'\r\n\r\nconst Admin = () => {\r\n  const token = localStorage.getItem('token')\r\n  // const userRole = localStorage.getItem('userRole')\r\n  // console.log(userRole)\r\n  //User role is 0 for Recruiter and 1 for Candidate.\r\n  const renderText = (\r\n    <div className=' '>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className=''>\r\n          <i className='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n      </div>\r\n      <div className='flex justify-center mt-4 items-center w-2/3 mx-auto'>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-sad-tear text-red-500 mr-3 text-4xl'></i>\r\n          <h1 className='text-red-500 text-lg  lg:text-4xl'>\r\n            Sorry, No proper user right to access this section !\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return <div>{token ? <PostAJob /> : renderText}</div>\r\n}\r\n\r\nexport default Admin\r\n","const Loader = () => {\r\n  return (\r\n    <div className=' w-screen h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center'>\r\n      <div className='loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4'></div>\r\n      <h2 className='text-center text-white text-xl font-semibold'>\r\n        Loading...\r\n      </h2>\r\n      <p className='w-1/3 text-center text-white'>\r\n        This may take a few seconds, please don't close this page.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport Loader from '../common/Loader'\r\nimport data from '../assets/candidates.json'\r\n\r\nconst SingleJobDetail = ({ match, setModalIsOpen }) => {\r\n  const [applications, setApplications] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  // console.log(data)\r\n  useEffect(() => {\r\n    // const url = `${BASE_URL}${routes.jobsRoute}`\r\n    // fetch(url)\r\n    //   .then((res) => res.json())\r\n    //   .then(\r\n    //     (data) => {\r\n    //       setIsLoaded(true)\r\n    //       // const SingleData = data.data.find((a) => a.id === match.params.id)\r\n    //       setJob(data.data)\r\n    //     },\r\n    //     (error) => {\r\n    //       setIsLoaded(true)\r\n    //       setError(error)\r\n    //     }\r\n    //   )\r\n    setIsLoaded(true)\r\n    setApplications(data)\r\n  }, [])\r\n  if (error) {\r\n    return <>{error.message}</>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='dark__mode__black'>\r\n        <div className=' text-blue-moderate'>\r\n          {/* <p>Currencies: {country.currencies[0]['code']}</p> */}\r\n          <div className='lg:mx-24 mt-20 mb-12'>\r\n            <h2 className='mx-5 my-5 text-blue-moderate font-semibold text-2xl'>\r\n              Applicants for this job\r\n            </h2>\r\n            <div className='m-5'>\r\n              <hr />\r\n            </div>\r\n            <h3 className='mx-5 my-5 text-blue-dark font-semibold text-lg'>\r\n              Total {data && data.length} Applicants\r\n            </h3>\r\n            <div\r\n              className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row px-1 py-4 rounded-lg'\r\n              style={{ background: '#A9AFBC' }}\r\n            >\r\n              {data &&\r\n                data.map((applicant) => {\r\n                  return (\r\n                    <div\r\n                      className='border px-5 py-5 w-48 md:w-96 lg:80 text-left rounded-lg bg-white m-2'\r\n                      key={Math.random()}\r\n                    >\r\n                      <div className='flex flex-col md:flex-row justify-start'>\r\n                        <div className='p-1 md:p-2 rounded-full h-16 w-16 md:mr-5 flex items-center text-2xl font-semibold justify-center bg-blue-lighter border'>\r\n                          {applicant.name[0]}\r\n                        </div>\r\n                        <div className=''>\r\n                          <h3 className='my-2 text-xl text-blue-moderate capitalize font-semibold'>\r\n                            {applicant.name}\r\n                          </h3>\r\n                          <p className='text-blue-moderate overflow-ellipsis overflow-hidden'>\r\n                            {applicant.email}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='flex justify-between items-center mt-5 mb-2'>\r\n                        <div className='text-lg'>\r\n                          <div className=''>\r\n                            <strong>Skills:</strong>\r\n                          </div>\r\n                          <span className='text-blue-moderate text-left'>\r\n                            {applicant.skills}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n            </div>\r\n          </div>\r\n          <button\r\n            className='bg-cyan-moderate hover:bg-cyan-dark text-white rounded-full px-6 py-2 lg:py-4'\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SingleJobDetail\r\n","const JobCard = ({\r\n  job,\r\n  donationHandler,\r\n  modalIsOpen,\r\n  setModalIsOpen,\r\n  SingleJobDetail,\r\n  Modal,\r\n}) => {\r\n  return (\r\n    <div\r\n      className='border px-5 py-5 text-left rounded-lg w-64 md:w-96 bg-white m-2'\r\n      key={job.id}\r\n    >\r\n      <h3 className='my-2 text-xl text-blue-moderate capitalize font-semibold overflow-ellipsis overflow-hidden'>\r\n        {job.title}\r\n      </h3>\r\n      <div className='h-20'>\r\n        <p className='text-blue-moderate overflow-ellipsis overflow-hidden'>\r\n          {job.description}\r\n        </p>\r\n      </div>\r\n      <div className='flex flex-col lg:flex-row justify-between items-center my-2'>\r\n        <div className='text-lg mb-5 lg:mb-0'>\r\n          <i className='fas fa-map-marker-alt text-blue-lightBlue'></i>\r\n          <span className='text-blue-moderate  ml-2'>{job.location}</span>\r\n        </div>\r\n\r\n        <button\r\n          className='px-3 py-2 bg-blue-lighter text-blue-moderate rounded'\r\n          onClick={donationHandler}\r\n        >\r\n          View Applications\r\n        </button>\r\n\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          ariaHideApp={false}\r\n          onRequestClose={() => setModalIsOpen(false)}\r\n          style={{\r\n            overlay: {\r\n              backgroundColor: 'rgba(0,0,0,0.07)',\r\n            },\r\n            content: {\r\n              color: 'gray',\r\n              width: '80vw',\r\n              margin: 'auto',\r\n            },\r\n          }}\r\n        >\r\n          <div className='flex justify-end items-start sticky top-10 right-0'>\r\n            <button\r\n              className='button rounded-full'\r\n              onClick={() => setModalIsOpen(false)}\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          </div>\r\n          {/* <div className='flex justify-end items-start sticky top-10 right-0'>\r\n                   \r\n                  </div> */}\r\n          {/* <div className='flex flex-col justify-center items-center pt-5 m-auto'> */}\r\n          <SingleJobDetail setModalIsOpen={setModalIsOpen} />\r\n          {/* </div> */}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobCard\r\n","import { useState } from 'react'\r\n\r\nconst renderedData2 = (jobs) => {\r\n return (\r\n  <ul className=\"\">\r\n   {jobs.map((job, index) => {\r\n    return (\r\n     <li className=\"\"></li>\r\n    )\r\n   })}\r\n  </ul>\r\n )\r\n}\r\n\r\nconst PaginationTable = ({ data, renderedData }) => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [itemsPerPage, setItemsPerPage] = useState(10)\r\n  const [pageNumberLimit, setPageNumberLimit] = useState(5)\r\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5)\r\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0)\r\n\r\n  const handleClick = (event) => {\r\n    setCurrentPage(+event.target.value)\r\n  }\r\n  const pages = []\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\r\n    pages.push(i)\r\n  }\r\n  const indexOfLastItem = currentPage * itemsPerPage\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem)\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage === number ? 'bg-blue-dark text-white' : ''}\r\n        >\r\n          {number}\r\n        </li>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  })\r\n  const handlePrevButton = () => {\r\n    setCurrentPage(currentPage - 1)\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\r\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n    }\r\n  }\r\n  const handleNextButton = () => {\r\n    setCurrentPage(currentPage + 1)\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\r\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n    }\r\n  }\r\n  let pageIncrementBtn = null\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextButton}> &hellip; </li>\r\n  }\r\n  let pageDecrementBtn = null\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevButton}> &hellip; </li>\r\n  }\r\n  // const handleLoadMore = () => {\r\n  //   setItemsPerPage(itemsPerPage + 5)\r\n  // }\r\n  return (\r\n    <div>\r\n      {renderedData(currentItems)}\r\n      <ul className='pageNumbers'>\r\n        <li>\r\n          <button\r\n            className='button'\r\n            disabled={currentPage === pages[0] ? true : false}\r\n            onClick={handlePrevButton}\r\n          >\r\n            <i className='fas fa-backward'></i>Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li>\r\n          <button\r\n            className='button'\r\n            disabled={currentPage === pages[pages.length - 1] ? true : false}\r\n            onClick={handleNextButton}\r\n          >\r\n            Next\r\n            <i className='fas fa-forward'></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      {/* <button className='button' onClick={handleLoadMore}>\r\n        Load More\r\n      </button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaginationTable\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport Loader from '../common/Loader'\r\nimport SingleJobDetail from './SingleJobDetail'\r\nimport Modal from 'react-modal'\r\nimport JobCard from './JobCard'\r\nimport PaginationTable from '../common/PaginationTable'\r\n\r\nconst Jobs = () => {\r\n  const [jobs, setJobs] = useState([])\r\n  const [isActive, setActive] = useState(false)\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  // console.log(jobs)\r\n  const toggleCard = () => {\r\n    setActive(true)\r\n  }\r\n  const donationHandler = (e) => {\r\n    setModalIsOpen(true)\r\n  }\r\n  useEffect(() => {\r\n    const url = `${BASE_URL}${routes.jobsRoute}`\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const response = await fetch(url)\r\n      if (!response) {\r\n        const message = 'The data is not fetched'\r\n        throw new Error(message)\r\n      }\r\n      const data = await response.json()\r\n      // setLoading(false)\r\n      setJobs(data.data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n  const renderedData = () => {\r\n    return (\r\n      <div className='lg:mx-24 mt-20 mb-12'>\r\n        <h3 className='mx-5 my-5 text-white font-semibold text-2xl'>\r\n          Jobs posted by you\r\n        </h3>\r\n        <div className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row pb-20'>\r\n          {jobs &&\r\n            jobs.map((job) => {\r\n              return (\r\n                <div className='' key={job.id}>\r\n                  <JobCard\r\n                    job={job}\r\n                    Modal={Modal}\r\n                    donationHandler={donationHandler}\r\n                    modalIsOpen={modalIsOpen}\r\n                    setModalIsOpen={setModalIsOpen}\r\n                    SingleJobDetail={SingleJobDetail}\r\n                  />\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  // console.log(jobs)\r\n  if (!loading) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        {' '}\r\n        {/* <div className='lg:mx-24 mt-20 mb-12'>\r\n          <h3 className='mx-5 my-5 text-white font-semibold text-2xl'>\r\n            Jobs posted by you\r\n          </h3>\r\n          <div className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row pb-20'>\r\n            {jobs &&\r\n              jobs.map((job) => {\r\n                return (\r\n                  <div className='' key={job.id}>\r\n                    <JobCard\r\n                      job={job}\r\n                      Modal={Modal}\r\n                      donationHandler={donationHandler}\r\n                      modalIsOpen={modalIsOpen}\r\n                      setModalIsOpen={setModalIsOpen}\r\n                      SingleJobDetail={SingleJobDetail}\r\n                    />\r\n                  </div>\r\n                )\r\n              })}\r\n          </div>\r\n        </div> */}\r\n        <PaginationTable data={jobs} renderedData={renderedData} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Jobs\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport { getApiResponse } from '../../utils/apiHandler'\r\nimport { ResetValidation } from './validation'\r\n\r\nconst ForgetPassword = ({ submitForm }) => {\r\n  const history = useHistory()\r\n  const [result, setResult] = useState({})\r\n  const [email, setEmail] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const onChangeHandler = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(ResetValidation(result, email))\r\n    setDataIsCorrect(true)\r\n  }\r\n  const performAPICall = async () => {\r\n    setLoading(true)\r\n    let response\r\n    let errored = false\r\n    try {\r\n      let url = `${BASE_URL}${routes.changePassword}?email=${email}`\r\n      response = await getApiResponse(url)\r\n    } catch (error) {\r\n      errored = true\r\n    }\r\n    localStorage.setItem('resetToken', response.data.token)\r\n    localStorage.setItem('email', response.data.email)\r\n    setResult(response.data)\r\n    setLoading(false)\r\n    return response\r\n  }\r\n  // useEffect(() => {\r\n  //   if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n  //     submitForm(true)\r\n  //   }\r\n  // }, [errors])\r\n  const reset = async () => {\r\n    try {\r\n      var response = await performAPICall()\r\n      if (response !== undefined) {\r\n        setEmail('')\r\n        history.push(routes.changePassword)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Forgot your password?</h3>\r\n            <p className='my-4'>\r\n              Enter the email associated with your account and we’ll send you\r\n              instructions to reset your password.\r\n            </p>\r\n          </div>\r\n          <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n            Enter Your Email Address\r\n          </span>\r\n          <input\r\n            name='email'\r\n            placeholder='Enter your email'\r\n            type='email'\r\n            className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none text-blue-dark'\r\n            value={email}\r\n            onChange={onChangeHandler}\r\n          />\r\n          {errors.error && <p className='error w-48'>{errors.error}</p>}\r\n\r\n          <button\r\n            className='mt-3 text-lg font-semibold \r\n                bg-blue-lightBlue w-full text-white rounded-lg\r\n                px-6 py-3 block shadow-xl hover:text-white hover:bg-blue-dark'\r\n            onClick={reset}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport { getApiResponse } from '../../utils/apiHandler'\r\nimport validation, { ResetValidation } from './validation'\r\n\r\nconst ResetPassword = ({ submitForm }) => {\r\n  const history = useHistory()\r\n  const [result, setResult] = useState({})\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    let values = { password, confirmPassword }\r\n    setErrors(validation(values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  const performAPICall = async () => {\r\n    setLoading(true)\r\n    let response\r\n    let errored = false\r\n    try {\r\n      let token = localStorage.getItem('resetToken')\r\n      let url = `${BASE_URL}${routes.changePassword}?email=${email}`\r\n      let method = 'POST'\r\n      let headers = {\r\n        'Content-Type': 'application/json',\r\n      }\r\n      let body = JSON.stringify({\r\n        password,\r\n        confirmPassword,\r\n        token,\r\n      })\r\n      response = await getApiResponse(url, method, headers, body)\r\n    } catch (error) {\r\n      errored = true\r\n    }\r\n    setResult(response)\r\n    setLoading(false)\r\n    return response\r\n  }\r\n  // useEffect(() => {\r\n  //   if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n  //     submitForm(true)\r\n  //   }\r\n  // }, [errors])\r\n  const reset = async () => {\r\n    try {\r\n      var response = await performAPICall()\r\n      if (response !== undefined) {\r\n        setEmail('')\r\n        history.push(routes.loginRoute)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Forgot your password?</h3>\r\n            <p className='my-4'>\r\n              Enter the email associated with your account and we’ll send you\r\n              instructions to reset your password.\r\n            </p>\r\n          </div>\r\n          <div className=''>\r\n            <div className='py-2'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                New Password*\r\n              </span>\r\n              <input\r\n                name='password'\r\n                placeholder='Enter your password'\r\n                type='password'\r\n                className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              {errors.password && (\r\n                <p className='error w-48'>{errors.password}</p>\r\n              )}\r\n            </div>\r\n            <div className='py-2' x-data='{ show: true }'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                Confirm new password*\r\n              </span>\r\n              <div className='relative'>\r\n                <input\r\n                  name='confirmPassword'\r\n                  type='password'\r\n                  placeholder='confirm Password'\r\n                  className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className='error'>{errors.confirmPassword}</p>\r\n                )}\r\n\r\n                <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {errors.error && <p className='error w-48'>{errors.error}</p>}\r\n\r\n          <button\r\n            className='mt-3 text-lg font-semibold \r\n                bg-blue-lightBlue w-full text-white rounded-lg\r\n                px-6 py-3 block shadow-xl hover:text-white hover:bg-blue-dark'\r\n            onClick={reset}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n\r\n// import { useState, useEffect } from 'react'\r\n\r\n// const ForgetPassword = () => {\r\n//   const [email, setEmail] = useState('')\r\n//   const [password, setPassword] = useState('')\r\n//   const onChangeHandler = (e) => {\r\n//     // console.log()\r\n//     setEmail(e.target.value)\r\n//   }\r\n//   return (\r\n//     <div className='flex justify-center pt-20 z-50'>\r\n//       <form\r\n//         className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n//         onSubmit={(e) => e.preventDefault()}\r\n//       >\r\n//         <div className='py-2'>\r\n//           <div className='p-2'>\r\n//             <h3 className='font-semibold text-2xl'>Reset Your Password</h3>\r\n//             <p className='my-4'>Enter your new password below.</p>\r\n//           </div>\r\n//           <div className='py-2'>\r\n//             <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n//               New Password\r\n//             </span>\r\n//             <input\r\n//               placeholder='Enter your password'\r\n//               type='text'\r\n//               className='text-md block px-3 py-2  rounded-lg w-full\r\n//                 bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className='py-2' x-data='{ show: true }'>\r\n//             <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n//               Confirm new password\r\n//             </span>\r\n//             <div className='relative'>\r\n//               <input\r\n//                 placeholder='Enter your password'\r\n//                 className='text-md block px-3 py-2 rounded-lg w-full\r\n//                 bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n//                 focus:placeholder-gray-500\r\n//                 focus:bg-white\r\n//                 focus:border-gray-600\r\n//                 focus:outline-none'\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//               />\r\n//               <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n//             </div>\r\n//           </div>\r\n//           <button\r\n//             className='mt-3 text-lg font-semibold\r\n//                 bg-blue-lightBlue w-full text-white rounded-lg\r\n//                 px-6 py-3 block shadow-xl hover:text-white hover:bg-blue-dark'\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default ForgetPassword\r\n","import { useState } from 'react'\r\nimport ForgetPassword from './Reset'\r\n\r\nconst Form = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? (\r\n        <ForgetPassword submitForm={submitForm} />\r\n      ) : (\r\n        'The email is not registered'\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","const validation = (values) => {\r\n  let errors = {}\r\n  if (!values.jobTitle || !values.description || !values.location) {\r\n    errors.jobTitle = 'All Fields is mandatory'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default validation\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport validation from './JobValidation'\r\n\r\nconst NewJobForm = ({ submitForm }) => {\r\n  const history = useHistory()\r\n  const [values, setValues] = useState({\r\n    jobTitle: '',\r\n    description: '',\r\n    location: '',\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(validation(values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n      submitForm(true)\r\n    }\r\n  }, [errors])\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border mb-10'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Post A job</h3>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Job Title*\r\n            </span>\r\n            <input\r\n              name='jobTitle'\r\n              placeholder='Enter job title'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.jobTitle}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Description**\r\n            </span>\r\n            <textarea\r\n              name='description'\r\n              placeholder='Enter job description'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.description}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Location*\r\n            </span>\r\n            <input\r\n              placeholder='Enter location'\r\n              name='location'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.location}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {errors.jobTitle && <p className='error'>{errors.jobTitle}</p>}\r\n          <button className='button mx-auto'>POST</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewJobForm\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst NewJobSuccess = () => {\r\n  return (\r\n    <div className=''>\r\n      <div className='flex justify-center mt-20 items-center '>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-smile-beam text-yellow-500 mr-2 text-4xl'></i>\r\n          <h1 className='text-blue-lightBlue text-4xl'>Job Created!</h1>\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className='mr-20'>\r\n          <i className='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n        <Link to='/jobs' className=''>\r\n          <i className='fas fa-sign-in-alt mr-2'></i>\r\n          <span className='text-blue-lightBlue'>All Jobs</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewJobSuccess\r\n","import { useState } from 'react'\r\nimport NewJobForm from './NewJobForm'\r\nimport NewJobSuccess from './NewJobSuccess'\r\n\r\nconst JobForm = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? (\r\n        <NewJobForm submitForm={submitForm} />\r\n      ) : (\r\n        <NewJobSuccess />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobForm\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport { getApiResponse } from '../../utils/apiHandler'\r\nimport validation from './validation'\r\n\r\nconst Signup = ({ submitForm }) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [isActive1, setIsActive1] = useState(false)\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n  const [userRole, setUserRole] = useState(0)\r\n  const [values, setValues] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    skills: '',\r\n  })\r\n  // const userRoleHandler = () => {\r\n  //   setValues({...values,userRole})\r\n  // }\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(validation(values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n      submitForm(true)\r\n    }\r\n  }, [errors])\r\n  const performAPICall = async () => {\r\n    setLoading(true)\r\n    let response\r\n    let errored = false\r\n    try {\r\n      let url = `${BASE_URL}${routes.registerRoute}`\r\n      let method = 'POST'\r\n      let headers = {\r\n        'Content-Type': 'application/json',\r\n      }\r\n      const name = values.fullName\r\n      const email = values.email\r\n      const password = values.password\r\n      const confirmPassword = values.confirmPassword\r\n      const skills = values.skills\r\n\r\n      let body = JSON.stringify({\r\n        email,\r\n        userRole,\r\n        password,\r\n        confirmPassword,\r\n        name,\r\n        skills,\r\n      })\r\n\r\n      response = await getApiResponse(url, method, headers, body)\r\n    } catch (error) {\r\n      errored = true\r\n    }\r\n    setLoading(false)\r\n    return response\r\n  }\r\n  const signup = async () => {\r\n    try {\r\n      var response = await performAPICall()\r\n      if (response !== undefined) {\r\n        setValues('')\r\n        // history.push(routes.jobsRoute)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border mb-10'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Signup</h3>\r\n            <p className='mt-4'>I’m a*</p>\r\n            <div className='flex justify-start'>\r\n              {/* button will be here*/}\r\n              <label className='py-2 px-4 bg-blue-lightBlue text-white rounded-lg mr-4'>\r\n                <i className='fas fa-user-tie mr-2'></i>\r\n                <span className='mr-2'>Recruiter</span>\r\n                <input\r\n                  type='radio'\r\n                  name='name'\r\n                  value={userRole}\r\n                  onClick={() => setUserRole(0)}\r\n                />\r\n              </label>\r\n              <label className='py-2 px-4 bg-blue-lightBlue text-white rounded-lg'>\r\n                <i className='fas fa-user-graduate mr-2'></i>\r\n                <span className='mr-2'>Candidate</span>\r\n                <input\r\n                  type='radio'\r\n                  name='name'\r\n                  value={userRole}\r\n                  onClick={() => setUserRole(1)}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Full Name*\r\n            </span>\r\n            <input\r\n              name='fullName'\r\n              placeholder='Enter your full name'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.fullName}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {errors.fullName && <p className='error'>{errors.fullName}</p>}\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Email Address*\r\n            </span>\r\n            <input\r\n              name='email'\r\n              placeholder='Enter your email'\r\n              type='email'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.email}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {errors.email && <p className='error'>{errors.email}</p>}\r\n          </div>\r\n          <div className='flex justify-between'>\r\n            <div className='py-2'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                New Password*\r\n              </span>\r\n              <input\r\n                name='password'\r\n                placeholder='Enter your password'\r\n                type='password'\r\n                className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n                value={values.password}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              {errors.password && (\r\n                <p className='error w-48'>{errors.password}</p>\r\n              )}\r\n            </div>\r\n            <div className='py-2' x-data='{ show: true }'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                Confirm new password*\r\n              </span>\r\n              <div className='relative'>\r\n                <input\r\n                  name='confirmPassword'\r\n                  type='password'\r\n                  placeholder='confirm Password'\r\n                  className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className='error'>{errors.confirmPassword}</p>\r\n                )}\r\n\r\n                <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Skills\r\n            </span>\r\n            <input\r\n              placeholder='Enter your skills'\r\n              name='skills'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.skills}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button className='button mx-auto' onClick={signup}>\r\n            Signup\r\n          </button>\r\n        </div>\r\n        <div className='text-blue-dark text-center mt-8'>\r\n          <span className=''>Have an account?</span>\r\n          <Link to={routes.loginRoute}>\r\n            <span className='text-blue-lightBlue'>Login</span>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst SignupSuccess = () => {\r\n  return (\r\n    <div className=''>\r\n      <div className='flex justify-center mt-20 items-center '>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-smile-beam text-yellow-500 mr-2 text-4xl'></i>\r\n          <h1 className='text-blue-lightBlue text-4xl'>Account Created!</h1>\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className='mr-20'>\r\n          <i className='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n        <Link to='/login' className=''>\r\n          <i className='fas fa-sign-in-alt mr-2'></i>\r\n          <span className='text-blue-lightBlue'>Login</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupSuccess\r\n","import { useState } from 'react'\r\nimport Signup from './Signup'\r\nimport SignupSuccess from './SignupSuccess'\r\n\r\nconst Form = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? (\r\n        <Signup submitForm={submitForm} />\r\n      ) : (\r\n        <SignupSuccess />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst LoginSuccess = () => {\r\n  return (\r\n    <div className=''>\r\n      <div className='flex justify-center mt-20 items-center '>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-smile-beam text-yellow-500 mr-2 text-4xl'></i>\r\n          <h1 className='text-blue-lightBlue text-4xl'>Successfully Login !</h1>\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className='mr-20'>\r\n          <i className='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n        <Link to='/jobs' className=''>\r\n          <i className='fas fa-sign-in-alt mr-2'></i>\r\n          <span className='text-blue-lightBlue'>All Jobs</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginSuccess\r\n","import { useState } from 'react'\r\nimport Login from './Login'\r\nimport LoginSuccess from './LoginSuccess2'\r\n\r\nconst LoginForm = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? <Login submitForm={submitForm} /> : <LoginSuccess />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import logo from './logo.svg'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  useLocation,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport './App.css'\r\nimport Header from './components/Header.js/Header'\r\nimport Login from './components/Login/Login'\r\nimport Home from './components/Home/Home'\r\nimport Candidate from './components/Candiates/Candidate'\r\nimport Logout from './components/Login/Logout'\r\nimport Admin from './components/admin/Admin'\r\nimport Jobs from './components/Job/Jobs'\r\nimport { useLayoutEffect } from 'react'\r\nimport Reset from './components/Login/ForgetPassword'\r\nimport ForgetPassword from './components/Login/Reset'\r\nimport ForgetPasswordForm from './components/Login/ForgetPasswordForm'\r\nimport SingleJobDetail from './components/Job/SingleJobDetail'\r\nimport PostAJob from './components/Job/PostAJob'\r\nimport JobForm from './components/Job/JobForm'\r\nimport Form from './components/Login/Form'\r\nimport LoginForm from './components/Login/LoginForm'\r\nimport routes from './config/config'\r\n\r\nfunction App(props) {\r\n  const location = useLocation()\r\n  // Scroll to top if path changes\r\n  useLayoutEffect(() => {\r\n    window && window.scrollTo(0, 0)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div>\r\n      <nav className='bg-gradient-to-r from-blue-dark to-blue-moderate h-72 text-white'>\r\n        <Header />\r\n        <div className='newBorder'></div>\r\n        <Switch>\r\n          {/* <Route path='/login' component={Login} /> */}\r\n          <Route path={routes.loginRoute} component={LoginForm} />\r\n          <Route path={routes.logoutRoute} component={Logout} />\r\n          <Route path={routes.registerRoute} component={Form} />\r\n          {/* <Route path='/jobs/:id' component={SingleJobDetail} /> */}\r\n          <Route path='/jobs/new-job' component={PostAJob} exact />\r\n          <Route path='/jobs/new-job/create' component={JobForm} exact />\r\n          <Route path={routes.getAllJobDetails} component={Jobs} />\r\n          <Route path='/candidates' component={Candidate} />\r\n          <Route path={routes.changePassword} component={ForgetPasswordForm} />\r\n          <Route path={routes.forgetpassword} component={Reset} />\r\n          <Route path={routes.admin} component={Admin} />\r\n          <Route path='/myjobs' exact component={Home} />\r\n        </Switch>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}