{"version":3,"sources":["logo.svg","config/config.js","components/Header.js/Header.js","utils/apiHandler.js","components/Login/Login.js","components/Home/Home.js","components/Hooks/useJobs.js","components/Candiates/Candidate.js","components/Login/Logout.js","components/Job/PostAJob.js","components/admin/Admin.js","components/common/Loader.js","components/Job/SingleJobDetail.js","components/Job/JobCard.js","components/common/PaginationTable.js","components/Job/Jobs.js","components/Login/ForgetPassword.js","components/Login/Reset.js","components/Job/JobValidation.js","components/Job/NewJobForm.js","components/Job/NewJobSuccess.js","components/Job/JobForm.js","components/Login/validation.js","components/Login/Signup.js","components/Login/SignupSuccess.js","components/Login/Form.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","routes","rootRoute","loginRoute","logoutRoute","registerRoute","getPasswordResetToken","verifyPasswordToken","changePassword","jobsRoute","getOneJobDetails","getAllJobDetails","deleteJob","candidates","getAvailableJobs","getAlreadyAppliedJobs","getPostedJobs","getOneJobCandidates","thanksRoute","Header","props","useState","isActive","setIsActive","history","useHistory","className","onClick","push","to","localStorage","getItem","getApiResponse","url","method","headers","body","a","fetch","json","response","Login","setLoading","username","setUsername","password","setPassword","performAPICall","errored","JSON","stringify","validateResponse","success","persistLogin","token","balance","setItem","login","undefined","console","log","onSubmit","e","preventDefault","placeholder","type","onChange","target","value","x-data","Home","src","alt","useJobs","jobs","setJobs","useEffect","Error","data","fetchData","Candidate","LogoutView","class","removeItem","PostAJob","Admin","Loader","SingleJobDetail","match","setModalIsOpen","setApplications","error","isLoaded","setIsLoaded","message","length","style","background","map","applicant","name","email","skills","Math","random","JobCard","job","donationHandler","modalIsOpen","Modal","title","description","location","isOpen","ariaHideApp","onRequestClose","overlay","backgroundColor","content","color","width","margin","id","PaginationTable","renderedData","currentPage","setCurrentPage","itemsPerPage","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","handleClick","event","pages","i","ceil","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","number","handlePrevButton","handleNextButton","pageIncrementBtn","pageDecrementBtn","disabled","Jobs","loading","Reset","setEmail","ForgetPassword","validation","values","errors","jobTitle","NewJobForm","submitForm","setValues","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","Object","keys","NewJobSuccess","JobForm","isFormSubmitted","setIsFormSubmitted","fullName","test","confirmPassword","Signup","SignupSuccess","Form","App","useLocation","useLayoutEffect","window","scrollTo","pathname","path","component","Logout","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3ab011b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const BASE_URL = `https://jobs-api.squareboat.info/api/v1`\r\n\r\nconst routes = {\r\n  rootRoute: '/myjobs',\r\n  //auth routes\r\n  loginRoute: '/auth/login',\r\n  logoutRoute: '/auth/logout',\r\n  registerRoute: '/auth/register',\r\n  getPasswordResetToken: '/auth/resetpassword?email=sharad@gmail.com',\r\n  verifyPasswordToken: '/auth/resetpassword/:token',\r\n  changePassword: '/auth/resetpassword',\r\n  //job router\r\n  jobsRoute: '/jobs?',\r\n  getOneJobDetails: '/jobs/:id',\r\n  getAllJobDetails: '/jobs?',\r\n  deleteJob: '/jobs/:id',\r\n  //candidates\r\n  candidates: '/candidates/jobs',\r\n  getAvailableJobs: '/candidates/jobs?',\r\n  getAlreadyAppliedJobs: '/candidates/jobs/applied',\r\n  //recruiters\r\n  getPostedJobs: '/recruiters/jobs',\r\n  getOneJobCandidates: '/recruiters/jobs/:id',\r\n  thanksRoute: '/thanks',\r\n}\r\nexport default routes\r\n","import { Link } from 'react-router-dom'\r\nimport routes from '../../config/config'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst Header = (props) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const toggleHeader = () => {\r\n    setIsActive(!isActive)\r\n  }\r\n  const history = useHistory()\r\n  const root = () => {\r\n    history.push(routes.rootRoute)\r\n  }\r\n  const login = () => {\r\n    history.push(routes.loginRoute)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='flex justify-between py-5 px-12 lg:px-20  items-center '>\r\n        <div className='logo font-bold text-2xl' onClick={root}>\r\n          <h2>\r\n            My<span className='text-blue-400'>Jobs</span>\r\n          </h2>\r\n        </div>\r\n\r\n        <div\r\n          // className='side__nav hidden md:flex text-center '\r\n          className={\r\n            isActive\r\n              ? 'flex justify-center shadow items-center text-center  Navbar__Link-toggle'\r\n              : 'text-sm w-56 justify-evenly items-center text-center  hidden md:flex'\r\n          }\r\n        >\r\n          <Link to='/admin'>\r\n            <div className='ml-4'>\r\n              <i className='fas fa-user-cog'></i>\r\n              <p className='text-sm'>Admin</p>\r\n            </div>\r\n          </Link>\r\n          {localStorage.getItem('username') ? (\r\n            <Link to='/logout'>\r\n              <div className='ml-4'>\r\n                <i className='fas fa-user-injured'></i>\r\n                <p className='text-sm'>Logout</p>\r\n              </div>\r\n            </Link>\r\n          ) : (\r\n            <>\r\n              <Link to='/login'>\r\n                <div className='ml-4'>\r\n                  <i className='fas fa-sign-in-alt'></i>\r\n                  <p className='text-sm'>Login</p>\r\n                </div>\r\n              </Link>\r\n              <Link to='/register'>\r\n                <div className='ml-4'>\r\n                  <i className='fas fa-user-plus'></i>\r\n                  <p className='text-sm'>Signup</p>\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='block md:hidden' onClick={toggleHeader}>\r\n          <i className='fas fa-bars'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","let getApiResponse = async (url, method, headers, body) => {\r\n  let response = await (await fetch(url, { method, headers, body })).json()\r\n  return response\r\n}\r\n\r\nexport { getApiResponse }\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getApiResponse } from '../../utils/apiHandler'\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const performAPICall = async () => {\r\n    setLoading(true)\r\n    let response\r\n    let errored = false\r\n    try {\r\n      let url = `${BASE_URL}/auth/login`\r\n      let method = 'POST'\r\n      let headers = {\r\n        'Content-Type': 'application/json',\r\n      }\r\n      let body = JSON.stringify({ username, password })\r\n\r\n      response = await getApiResponse(url, method, headers, body)\r\n    } catch (error) {\r\n      errored = true\r\n    }\r\n    setLoading(false)\r\n    if (validateResponse(errored, response)) {\r\n      return response\r\n    }\r\n  }\r\n\r\n  const validateInput = () => {\r\n    if (username === '') {\r\n      ;<div className='div'>Username is a required field</div>\r\n      // message.error('Username is a required field')\r\n      return false\r\n    }\r\n    if (password === '') {\r\n      // ;<Message sign='error' message='Password must not be empty' />\r\n      // message.error('Password must not be empty')\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const validateResponse = (errored, response) => {\r\n    if (errored === true || response === null) {\r\n      // ;<Message sign='error' message='Error Occured' />\r\n\r\n      // message.error('Error Occured')\r\n      return false\r\n    } else if (response.success === false) {\r\n      // ;<Message sign='error' message={response.message} />\r\n    } else if (errored === false && response.success === true) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const persistLogin = (token, username, balance) => {\r\n    localStorage.setItem('token', token)\r\n    localStorage.setItem('username', username)\r\n    localStorage.setItem('balance', balance)\r\n  }\r\n\r\n  const login = async () => {\r\n    if (validateInput() === true) {\r\n      try {\r\n        var response = await performAPICall()\r\n        if (response !== undefined) {\r\n          persistLogin(response.token, response.username, response.balance)\r\n          setUsername('')\r\n          setPassword('')\r\n          // ;<Message sign='sucess' message='Successfully Login' />\r\n          // message.success('Successfully Login')\r\n          props.history.push(routes.jobsRoute)\r\n        }\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    } else {\r\n      console.log('No proper input!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50 '>\r\n      <form\r\n        className='lg:w-2/5 text-black rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <div className='mx-auto max-w-lg'>\r\n          <h3 className='my-3 text-2xl text-blue-dark font-semibold'>Login</h3>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Email Address\r\n            </span>\r\n            <input\r\n              placeholder='Enter your email'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='py-2' x-data='{ show: true }'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Password\r\n            </span>\r\n            <div className='relative'>\r\n              <input\r\n                placeholder='Enter your password'\r\n                className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-between'>\r\n            <label className='block text-gray-500 font-bold my-4'>\r\n              <Link\r\n                to='/reset'\r\n                className='cursor-pointer tracking-tighter text-blue-lightBlue no-underline border-b-2'\r\n              >\r\n                <span>Reset your password?</span>\r\n              </Link>\r\n            </label>\r\n            <label className='block text-gray-500 font-bold my-4'>\r\n              <Link\r\n                to='/forgetpassword'\r\n                className='cursor-pointer tracking-tighter text-blue-lightBlue no-underline border-b-2'\r\n              >\r\n                <span>Forgot your password?</span>\r\n              </Link>\r\n            </label>\r\n          </div>\r\n          <button className='button mx-auto' onClick={login}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {/* Display the footer */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Link } from 'react-router-dom'\r\nimport Header from '../Header.js/Header'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n      <div className='bg-gradient-to-r from-blue-dark to-blue-moderate lg:px-16 h-3/4'>\r\n        {/* <Header /> */}\r\n\r\n        <div className='newBorder mx-12'></div>\r\n        <div className=''>\r\n          <div className='mx-10 md:mx-16 lg:mx-24 my-12 lg:my-20 text-white'>\r\n            <div className='flex items-center md:block logo text-2xl md:text-4xl lg:text-6xl'>\r\n              <h3 className='my-2 mx-2 lg:mx-0'>Welcome to </h3>\r\n              <h2 className=''>\r\n                My<span className='text-blue-lightBlue'>Jobs</span>\r\n              </h2>\r\n            </div>\r\n            <Link to='/jobs'>\r\n              <button className=' py-2 lg:py-3 lg:px-8  font-semibold rounded px-5 bg-blue-lightBlue mt-8 mb-12 lg:mt-12 lg:mb-20 hover:bg-blue-lighter'>\r\n                Get Started\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='img\r\n       hidden lg:flex justify-end -mt-96 mr-32 '\r\n      >\r\n        <img\r\n          src='https://images.unsplash.com/photo-1554774853-719586f82d77?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80'\r\n          className='object-contain rounded-2xl'\r\n          alt=''\r\n        />\r\n      </div>\r\n      <div className='m-5 lg:mx-24 lg:mt-20 mb-12'>\r\n        <h3 className='my-5 text-blue-dark font-semibold text-lg'>Why Us</h3>\r\n        <div className='flex flex-col lg:flex-row '>\r\n          <div className='border px-5 py-5 text-left rounded-lg  bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Get more visibility\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt.\r\n            </p>\r\n          </div>\r\n          <div className='border px-5 py-5 text-left rounded-lg my-5 lg:my-0 lg:mx-5 bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Organize your candidates\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            </p>\r\n          </div>\r\n          <div className='border px-5 py-5 text-left rounded-lg   bg-white'>\r\n            <div className='w-1/2'>\r\n              <h3 className='my-2 text-xl text-blue-lightBlue capitalize font-semibold'>\r\n                Verify their abilities\r\n              </h3>\r\n            </div>\r\n            <p className='text-blue-dark'>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst useJobs = () => {\r\n  const [jobs, setJobs] = useState([])\r\n  const url = 'https://jobs-api.squareboat.info/api/v1/'\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(url)\r\n      if (!response) {\r\n        const message = 'unable to fetch data ...'\r\n        throw new Error(message)\r\n      }\r\n      const data = await response.json()\r\n      setJobs(data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n  return jobs\r\n}\r\n\r\nexport default useJobs\r\n","import useJobs from '../Hooks/useJobs'\r\n\r\nconst Candidate = () => {\r\n  const jobs = useJobs()\r\n  console.log(jobs)\r\n  return <div>here you find a list of Candidate</div>\r\n}\r\n\r\nexport default Candidate\r\n","import React from 'react'\r\n// import \"./Header.css\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport routes from '../../config/config'\r\nconst LogoutView = (props) => {\r\n  const history = useHistory()\r\n  const root = () => {\r\n    history.push(routes.rootRoute)\r\n  }\r\n  const logout = () => {\r\n    localStorage.removeItem('username')\r\n    localStorage.removeItem('token')\r\n    history.push(routes.rootRoute)\r\n  }\r\n  return (\r\n    <div className='flex h-48 flex-col justify-center items-center'>\r\n      {/* <img src='avatar.png' alt='profile' className='profile-image'></img> */}\r\n      <div className='header-info '>\r\n        Hey {localStorage.getItem('username')},\r\n      </div>\r\n      <p className='my-5'>Click the button for logout</p>\r\n      <button class='button mx-auto' onClick={logout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default LogoutView\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst PostAJob = () => {\r\n  return (\r\n    <div>\r\n      {/* <div className='bg-gradient-to-r from-blue-dark to-blue-moderate lg:px-16 h-3/4'> */}\r\n      {/* <Header /> */}\r\n      <Link to='/myjobs' className='ml-20 '>\r\n        <i className='fas fa-house-user mr-2 pt-5'></i>{' '}\r\n        <span className='text-blue-lightBlue'>Home</span>\r\n      </Link>\r\n      <div className=''>\r\n        <div className='mx-10 md:mx-16 lg:mx-24 my-12 lg:my-20 text-white'>\r\n          <div className='flex items-center md:block logo text-2xl'>\r\n            <h2 className=''>Create a New Job</h2>\r\n          </div>\r\n        </div>\r\n        <div className='flex flex-col justify-center items-center pt-20'>\r\n          <i className='fas fa-pen-square text-6xl text-blue-moderate'></i>\r\n          <p className='text-blue-moderate my-5'>\r\n            Your posted jobs will show here!\r\n          </p>\r\n          <Link to='/jobs/new-job/create'>\r\n            <button className='button'>Post a Job</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default PostAJob\r\n","import PostAJob from '../Job/PostAJob'\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n      <PostAJob />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","const Loader = () => {\r\n  return (\r\n    <div className=' w-screen h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center'>\r\n      <div className='loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4'></div>\r\n      <h2 className='text-center text-white text-xl font-semibold'>\r\n        Loading...\r\n      </h2>\r\n      <p className='w-1/3 text-center text-white'>\r\n        This may take a few seconds, please don't close this page.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport Loader from '../common/Loader'\r\nimport data from '../assets/candidates.json'\r\n\r\nconst SingleJobDetail = ({ match, setModalIsOpen }) => {\r\n  const [applications, setApplications] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  // console.log(data)\r\n  useEffect(() => {\r\n    // const url = `${BASE_URL}${routes.jobsRoute}`\r\n    // fetch(url)\r\n    //   .then((res) => res.json())\r\n    //   .then(\r\n    //     (data) => {\r\n    //       setIsLoaded(true)\r\n    //       // const SingleData = data.data.find((a) => a.id === match.params.id)\r\n    //       setJob(data.data)\r\n    //     },\r\n    //     (error) => {\r\n    //       setIsLoaded(true)\r\n    //       setError(error)\r\n    //     }\r\n    //   )\r\n    setIsLoaded(true)\r\n    setApplications(data)\r\n  }, [])\r\n  if (error) {\r\n    return <>{error.message}</>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='dark__mode__black'>\r\n        <div className=' text-blue-moderate'>\r\n          {/* <p>Currencies: {country.currencies[0]['code']}</p> */}\r\n          <div className='lg:mx-24 mt-20 mb-12'>\r\n            <h2 className='mx-5 my-5 text-blue-moderate font-semibold text-2xl'>\r\n              Applicants for this job\r\n            </h2>\r\n            <div className='m-5'>\r\n              <hr />\r\n            </div>\r\n            <h3 className='mx-5 my-5 text-blue-dark font-semibold text-lg'>\r\n              Total {data && data.length} Applicants\r\n            </h3>\r\n            <div\r\n              className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row px-1 py-4 rounded-lg'\r\n              style={{ background: '#A9AFBC' }}\r\n            >\r\n              {data &&\r\n                data.map((applicant) => {\r\n                  return (\r\n                    <div\r\n                      className='border px-5 py-5 w-48 md:w-96 lg:80 text-left rounded-lg bg-white m-2'\r\n                      key={Math.random()}\r\n                    >\r\n                      <div className='flex flex-col md:flex-row justify-start'>\r\n                        <div className='p-1 md:p-2 rounded-full h-16 w-16 md:mr-5 flex items-center text-2xl font-semibold justify-center bg-blue-lighter border'>\r\n                          {applicant.name[0]}\r\n                        </div>\r\n                        <div className=''>\r\n                          <h3 className='my-2 text-xl text-blue-moderate capitalize font-semibold'>\r\n                            {applicant.name}\r\n                          </h3>\r\n                          <p className='text-blue-moderate overflow-ellipsis overflow-hidden'>\r\n                            {applicant.email}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='flex justify-between items-center mt-5 mb-2'>\r\n                        <div className='text-lg'>\r\n                          <div className=''>\r\n                            <strong>Skills:</strong>\r\n                          </div>\r\n                          <span className='text-blue-moderate text-left'>\r\n                            {applicant.skills}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n            </div>\r\n          </div>\r\n          <button\r\n            className='bg-cyan-moderate hover:bg-cyan-dark text-white rounded-full px-6 py-2 lg:py-4'\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SingleJobDetail\r\n","const JobCard = ({\r\n  job,\r\n  donationHandler,\r\n  modalIsOpen,\r\n  setModalIsOpen,\r\n  SingleJobDetail,\r\n  Modal,\r\n}) => {\r\n  return (\r\n    <div\r\n      className='border px-5 py-5 text-left rounded-lg w-64 md:w-96 bg-white m-2'\r\n      key={job.id}\r\n    >\r\n      <h3 className='my-2 text-xl text-blue-moderate capitalize font-semibold overflow-ellipsis overflow-hidden'>\r\n        {job.title}\r\n      </h3>\r\n      <div className='h-20'>\r\n        <p className='text-blue-moderate overflow-ellipsis overflow-hidden'>\r\n          {job.description}\r\n        </p>\r\n      </div>\r\n      <div className='flex flex-col lg:flex-row justify-between items-center my-2'>\r\n        <div className='text-lg mb-5 lg:mb-0'>\r\n          <i className='fas fa-map-marker-alt text-blue-lightBlue'></i>\r\n          <span className='text-blue-moderate  ml-2'>{job.location}</span>\r\n        </div>\r\n\r\n        <button\r\n          className='px-3 py-2 bg-blue-lighter text-blue-moderate rounded'\r\n          onClick={donationHandler}\r\n        >\r\n          View Applications\r\n        </button>\r\n\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          ariaHideApp={false}\r\n          onRequestClose={() => setModalIsOpen(false)}\r\n          style={{\r\n            overlay: {\r\n              backgroundColor: 'rgba(0,0,0,0.07)',\r\n            },\r\n            content: {\r\n              color: 'gray',\r\n              width: '80vw',\r\n              margin: 'auto',\r\n            },\r\n          }}\r\n        >\r\n          <div className='flex justify-end items-start sticky top-10 right-0'>\r\n            <button\r\n              className='button rounded-full'\r\n              onClick={() => setModalIsOpen(false)}\r\n            >\r\n              <i class='fas fa-times'></i>\r\n            </button>\r\n          </div>\r\n          {/* <div className='flex justify-end items-start sticky top-10 right-0'>\r\n                   \r\n                  </div> */}\r\n          {/* <div className='flex flex-col justify-center items-center pt-5 m-auto'> */}\r\n          <SingleJobDetail setModalIsOpen={setModalIsOpen} />\r\n          {/* </div> */}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobCard\r\n","import { useState } from 'react'\r\n\r\nconst renderedData2 = (jobs) => {\r\n return (\r\n  <ul className=\"\">\r\n   {jobs.map((job, index) => {\r\n    return (\r\n     <li className=\"\"></li>\r\n    )\r\n   })}\r\n  </ul>\r\n )\r\n}\r\n\r\nconst PaginationTable = ({ data, renderedData }) => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [itemsPerPage, setItemsPerPage] = useState(10)\r\n  const [pageNumberLimit, setPageNumberLimit] = useState(5)\r\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5)\r\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0)\r\n\r\n  const handleClick = (event) => {\r\n    setCurrentPage(+event.target.value)\r\n  }\r\n  const pages = []\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\r\n    pages.push(i)\r\n  }\r\n  const indexOfLastItem = currentPage * itemsPerPage\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem)\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage === number ? 'bg-blue-dark text-white' : ''}\r\n        >\r\n          {number}\r\n        </li>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  })\r\n  const handlePrevButton = () => {\r\n    setCurrentPage(currentPage - 1)\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\r\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n    }\r\n  }\r\n  const handleNextButton = () => {\r\n    setCurrentPage(currentPage + 1)\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\r\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n    }\r\n  }\r\n  let pageIncrementBtn = null\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextButton}> &hellip; </li>\r\n  }\r\n  let pageDecrementBtn = null\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevButton}> &hellip; </li>\r\n  }\r\n  // const handleLoadMore = () => {\r\n  //   setItemsPerPage(itemsPerPage + 5)\r\n  // }\r\n  return (\r\n    <div>\r\n      {renderedData(currentItems)}\r\n      <ul className='pageNumbers'>\r\n        <li>\r\n          <button\r\n            className='button'\r\n            disabled={currentPage === pages[0] ? true : false}\r\n            onClick={handlePrevButton}\r\n          >\r\n            <i class='fas fa-backward'></i>Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li>\r\n          <button\r\n            className='button'\r\n            disabled={currentPage === pages[pages.length - 1] ? true : false}\r\n            onClick={handleNextButton}\r\n          >\r\n            Next\r\n            <i class='fas fa-forward'></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      {/* <button className='button' onClick={handleLoadMore}>\r\n        Load More\r\n      </button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaginationTable\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport routes, { BASE_URL } from '../../config/config'\r\nimport Loader from '../common/Loader'\r\nimport SingleJobDetail from './SingleJobDetail'\r\nimport Modal from 'react-modal'\r\nimport JobCard from './JobCard'\r\nimport PaginationTable from '../common/PaginationTable'\r\n\r\nconst Jobs = () => {\r\n  const [jobs, setJobs] = useState([])\r\n  const [isActive, setActive] = useState(false)\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  // console.log(jobs)\r\n  const toggleCard = () => {\r\n    setActive(true)\r\n  }\r\n  const donationHandler = (e) => {\r\n    setModalIsOpen(true)\r\n  }\r\n  useEffect(() => {\r\n    const url = `${BASE_URL}${routes.jobsRoute}`\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const response = await fetch(url)\r\n      if (!response) {\r\n        const message = 'The data is not fetched'\r\n        throw new Error(message)\r\n      }\r\n      const data = await response.json()\r\n      // setLoading(false)\r\n      setJobs(data.data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n  const renderedData = () => {\r\n    return (\r\n      <div className='lg:mx-24 mt-20 mb-12'>\r\n        <h3 className='mx-5 my-5 text-white font-semibold text-2xl'>\r\n          Jobs posted by you\r\n        </h3>\r\n        <div className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row pb-20'>\r\n          {jobs &&\r\n            jobs.map((job) => {\r\n              return (\r\n                <div className='' key={job.id}>\r\n                  <JobCard\r\n                    job={job}\r\n                    Modal={Modal}\r\n                    donationHandler={donationHandler}\r\n                    modalIsOpen={modalIsOpen}\r\n                    setModalIsOpen={setModalIsOpen}\r\n                    SingleJobDetail={SingleJobDetail}\r\n                  />\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  // console.log(jobs)\r\n  if (!loading) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        {' '}\r\n        {/* <div className='lg:mx-24 mt-20 mb-12'>\r\n          <h3 className='mx-5 my-5 text-white font-semibold text-2xl'>\r\n            Jobs posted by you\r\n          </h3>\r\n          <div className='flex flex-col flex-wrap items-center justify-evenly lg:flex-row pb-20'>\r\n            {jobs &&\r\n              jobs.map((job) => {\r\n                return (\r\n                  <div className='' key={job.id}>\r\n                    <JobCard\r\n                      job={job}\r\n                      Modal={Modal}\r\n                      donationHandler={donationHandler}\r\n                      modalIsOpen={modalIsOpen}\r\n                      setModalIsOpen={setModalIsOpen}\r\n                      SingleJobDetail={SingleJobDetail}\r\n                    />\r\n                  </div>\r\n                )\r\n              })}\r\n          </div>\r\n        </div> */}\r\n        <PaginationTable data={jobs} renderedData={renderedData} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Jobs\r\n","import { useState } from 'react'\r\n\r\nconst Reset = () => {\r\n  const [email, setEmail] = useState('')\r\n  const onChangeHandler = (e) => {\r\n    // console.log()\r\n    setEmail(e.target.value)\r\n  }\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Forgot your password?</h3>\r\n            <p className='my-4'>\r\n              Enter the email associated with your account and we’ll send you\r\n              instructions to reset your password.\r\n            </p>\r\n          </div>\r\n          <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n            Enter Your Email Address\r\n          </span>\r\n          <input\r\n            placeholder='Enter your email'\r\n            type='text'\r\n            className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none text-blue-dark'\r\n            value={email}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <button\r\n            className='mt-3 text-lg font-semibold \r\n                bg-blue-lightBlue w-full text-white rounded-lg\r\n                px-6 py-3 block shadow-xl hover:text-white hover:bg-blue-dark'\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reset\r\n","import { useState } from 'react'\r\n\r\nconst ForgetPassword = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const onChangeHandler = (e) => {\r\n    // console.log()\r\n    setEmail(e.target.value)\r\n  }\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border'\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Reset Your Password</h3>\r\n            <p className='my-4'>Enter your new password below.</p>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              New Password\r\n            </span>\r\n            <input\r\n              placeholder='Enter your password'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='py-2' x-data='{ show: true }'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Confirm new password\r\n            </span>\r\n            <div className='relative'>\r\n              <input\r\n                placeholder='Enter your password'\r\n                className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className='mt-3 text-lg font-semibold \r\n                bg-blue-lightBlue w-full text-white rounded-lg\r\n                px-6 py-3 block shadow-xl hover:text-white hover:bg-blue-dark'\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword\r\n","const validation = (values) => {\r\n  let errors = {}\r\n  if (!values.jobTitle || !values.description || !values.location) {\r\n    errors.jobTitle = 'All Fields is mandatory'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default validation\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport validation from './JobValidation'\r\n\r\nconst NewJobForm = ({ submitForm }) => {\r\n  const history = useHistory()\r\n  const [values, setValues] = useState({\r\n    jobTitle: '',\r\n    description: '',\r\n    location: '',\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(validation(values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n      submitForm(true)\r\n    }\r\n  }, [errors])\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border mb-10'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Post A job</h3>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Job Title*\r\n            </span>\r\n            <input\r\n              name='jobTitle'\r\n              placeholder='Enter job title'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.jobTitle}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Description**\r\n            </span>\r\n            <textarea\r\n              name='description'\r\n              placeholder='Enter job description'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.description}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Location*\r\n            </span>\r\n            <input\r\n              placeholder='Enter location'\r\n              name='location'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.location}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {errors.jobTitle && <p className='error'>{errors.jobTitle}</p>}\r\n          <button className='button mx-auto'>POST</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewJobForm\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst NewJobSuccess = () => {\r\n  return (\r\n    <div className=''>\r\n      <div className='flex justify-center mt-20 items-center '>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-smile-beam text-yellow-500 mr-2 text-4xl'></i>\r\n          <h1 className='text-blue-lightBlue text-4xl'>Job Created!</h1>\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className='mr-20'>\r\n          <i class='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n        <Link to='/jobs' className=''>\r\n          <i class='fas fa-sign-in-alt mr-2'></i>\r\n          <span className='text-blue-lightBlue'>All Jobs</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewJobSuccess\r\n","import { useState } from 'react'\r\nimport NewJobForm from './NewJobForm'\r\nimport NewJobSuccess from './NewJobSuccess'\r\n\r\nconst JobForm = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? (\r\n        <NewJobForm submitForm={submitForm} />\r\n      ) : (\r\n        <NewJobSuccess />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobForm\r\n","const validation = (values) => {\r\n  let errors = {}\r\n  if (!values.fullName) {\r\n    errors.fullName = 'The Field is mandatory'\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Email is required'\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'The Field is required'\r\n  } else if (values.password.length < 5) {\r\n    errors.password = 'Password must be more than five character long'\r\n  }\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.confirmPassword = 'password is not matching'\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default validation\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport validation from './validation'\r\n\r\nconst Signup = ({ submitForm }) => {\r\n  const history = useHistory()\r\n  const [values, setValues] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    skills: '',\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [dataIsCorrect, setDataIsCorrect] = useState(false)\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setErrors(validation(values))\r\n    setDataIsCorrect(true)\r\n  }\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\r\n      submitForm(true)\r\n    }\r\n  }, [errors])\r\n\r\n  return (\r\n    <div className='flex justify-center pt-20 z-50'>\r\n      <form\r\n        className='lg:w-2/5 text-blue-dark rounded-2xl shadow py-8 px-4 lg:px-8 bg-white border mb-10'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='py-2'>\r\n          <div className='p-2'>\r\n            <h3 className='font-semibold text-2xl'>Signup</h3>\r\n            <p className='mt-4'>I’m a*</p>\r\n            <div className='flex'>\r\n              <button className='button mr-4'>\r\n                <i className='fas fa-user-tie mr-2'></i>\r\n                <span>Recruiter</span>\r\n              </button>\r\n              <button className='button'>\r\n                <i className='fas fa-user-graduate mr-2'></i>\r\n                <span>Candidate</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Full Name*\r\n            </span>\r\n            <input\r\n              name='fullName'\r\n              placeholder='Enter your full name'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.fullName}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {errors.fullName && <p className='error'>{errors.fullName}</p>}\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Email Address*\r\n            </span>\r\n            <input\r\n              name='email'\r\n              placeholder='Enter your email'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.email}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {errors.email && <p className='error'>{errors.email}</p>}\r\n          </div>\r\n          <div className='flex justify-between'>\r\n            {' '}\r\n            <div className='py-2'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                New Password*\r\n              </span>\r\n              <input\r\n                name='password'\r\n                placeholder='Enter your password'\r\n                type='password'\r\n                className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n                value={values.password}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              {errors.password && (\r\n                <p className='error w-48'>{errors.password}</p>\r\n              )}\r\n            </div>\r\n            <div className='py-2' x-data='{ show: true }'>\r\n              <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n                Confirm new password*\r\n              </span>\r\n              <div className='relative'>\r\n                <input\r\n                  name='confirmPassword'\r\n                  type='password'\r\n                  placeholder='confirm Password'\r\n                  className='text-md block px-3 py-2 rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md\r\n                focus:placeholder-gray-500\r\n                focus:bg-white \r\n                focus:border-gray-600  \r\n                focus:outline-none'\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className='error'>{errors.confirmPassword}</p>\r\n                )}\r\n\r\n                <div className='absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5'></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='py-2'>\r\n            <span className='px-1 text-sm text-blue-dark font-semibold'>\r\n              Skills\r\n            </span>\r\n            <input\r\n              placeholder='Enter your skills'\r\n              name='skills'\r\n              type='text'\r\n              className='text-md block px-3 py-2  rounded-lg w-full \r\n                bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none'\r\n              value={values.skills}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button className='button mx-auto'>Signup</button>\r\n        </div>\r\n        <div className='text-blue-dark text-center mt-8'>\r\n          <span className=''>Have an account?</span>\r\n          <Link to='/login'>\r\n            <span className='text-blue-lightBlue'>Login</span>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst SignupSuccess = () => {\r\n  return (\r\n    <div className=''>\r\n      <div className='flex justify-center mt-20 items-center '>\r\n        <div className='p-5 shadow border flex items-center rounded-lg'>\r\n          <i className='far fa-smile-beam text-yellow-500 mr-2 text-4xl'></i>\r\n          <h1 className='text-blue-lightBlue text-4xl'>Account Created!</h1>\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center my-2'>\r\n        <Link to='/myjobs' className='mr-20'>\r\n          <i class='fas fa-house-user mr-2'></i>{' '}\r\n          <span className='text-blue-lightBlue'>Go Home</span>\r\n        </Link>\r\n        <Link to='/login' className=''>\r\n          <i class='fas fa-sign-in-alt mr-2'></i>\r\n          <span className='text-blue-lightBlue'>Login</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupSuccess\r\n","import { useState } from 'react'\r\nimport Signup from './Signup'\r\nimport SignupSuccess from './SignupSuccess'\r\n\r\nconst Form = () => {\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false)\r\n  const submitForm = () => {\r\n    setIsFormSubmitted(true)\r\n  }\r\n  return (\r\n    <div>\r\n      {!isFormSubmitted ? (\r\n        <Signup submitForm={submitForm} />\r\n      ) : (\r\n        <SignupSuccess />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import logo from './logo.svg'\nimport {\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n  Switch,\n} from 'react-router-dom'\nimport './App.css'\nimport Header from './components/Header.js/Header'\nimport Login from './components/Login/Login'\nimport Home from './components/Home/Home'\nimport Candidate from './components/Candiates/Candidate'\nimport Logout from './components/Login/Logout'\nimport Admin from './components/admin/Admin'\nimport Jobs from './components/Job/Jobs'\nimport { useLayoutEffect } from 'react'\nimport Reset from './components/Login/ForgetPassword'\nimport ForgetPassword from './components/Login/Reset'\nimport SingleJobDetail from './components/Job/SingleJobDetail'\nimport PostAJob from './components/Job/PostAJob'\nimport JobForm from './components/Job/JobForm'\nimport Form from './components/Login/Form'\n\nfunction App(props) {\n  const location = useLocation()\n  // Scroll to top if path changes\n  useLayoutEffect(() => {\n    window && window.scrollTo(0, 0)\n  }, [location.pathname])\n\n  return (\n    <div>\n      <nav className='bg-gradient-to-r from-blue-dark to-blue-moderate h-72 text-white'>\n        <Header />\n        <div className='newBorder'></div>\n        <Switch>\n          <Route path='/login' component={Login} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/register' component={Form} />\n          {/* <Route path='/jobs/:id' component={SingleJobDetail} /> */}\n          <Route path='/jobs/new-job' component={PostAJob} exact />\n          <Route path='/jobs/new-job/create' component={JobForm} exact />\n          <Route path='/jobs' component={Jobs} />\n          <Route path='/candidates' component={Candidate} />\n          <Route path='/reset' component={ForgetPassword} />\n          <Route path='/forgetpassword' component={Reset} />\n          <Route path='/admin' component={Admin} />\n          <Route path='/myjobs' exact component={Home} />\n        </Switch>\n      </nav>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}